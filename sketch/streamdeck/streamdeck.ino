/*
  https://miliohm.com/complete-tutorial-for-i2c-oled-0-96-128x64-arduino-display/
*/

//#define HID_CUSTOM_LAYOUT // set this flag to indicate that a custom layout is selected
// if the above flag is not defined, then the default US layout is used instead

//#define LAYOUT_ITALIAN // set this flag after the above flag to indicate the custom input method is German
// for more layouts, see /src/KeyboardLayouts/ImprovedKeylayouts.h

// you must set the above flags before including HID-Project
#include "HID-Project.h"

#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <Keypad.h>

const byte ROWS = 3; //four rows
const byte COLS = 5; //four columns
//define the cymbols on the buttons of the keypads
char hexaKeys[ROWS][COLS] = {
  {'0','1','2','3','4'},
  {'5','6','7','8','9'},
  {'A','B','C','D','E'}
};
byte rowPins[ROWS] = {14,16,10}; //connect to the row pinouts of the keypad
byte colPins[COLS] = {5,6,7,8,9}; //connect to the column pinouts of the keypad

//initialize an instance of class NewKeypad
Keypad customKeypad = Keypad( makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS); 

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
// The pins for I2C are defined by the Wire-library. 
// On an arduino UNO:       A4(SDA), A5(SCL)
// On an arduino MEGA 2560: 20(SDA), 21(SCL)
// On an arduino LEONARDO:   2(SDA),  3(SCL), ...
#define OLED_RESET     4 // Reset pin # (or -1 if sharing Arduino reset pin)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

static const unsigned char PROGMEM bitmap_audiomute[] =
{
  B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000000, B00111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000000, B01111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000001, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000011, B11100110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00001111, B10000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00011111, B00000110, B00000000, B00000000, B00000000, B00011111, B00000011, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00111111, B11111100, B00000110, B00000000, B00000000, B00000000, B00011111, B00000111, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B01111111, B11111000, B00000110, B00000000, B00000000, B00000000, B00011111, B10000111, B11100000, B00000000, B00000001, B11100000, B00000000, B00000000, B00000011, B11000000,
  B11111111, B11100000, B00000110, B00011000, B00000110, B00000000, B00111111, B10000111, B11100000, B00000000, B00000001, B11100000, B00000000, B00000000, B00000011, B11000000,
  B11100000, B11100000, B00000110, B00111100, B00001111, B00000000, B00111111, B10001111, B11100000, B00000000, B00000001, B11100000, B00000000, B00000000, B00000011, B11000000,
  B11100000, B11100000, B00000110, B00011110, B00011110, B00000000, B00111111, B11001111, B11100000, B11110000, B11110111, B11111000, B00111111, B00000000, B11111011, B11000000,
  B11100000, B11100000, B00000110, B00001111, B00111100, B00000000, B00111111, B11001111, B11110000, B11110000, B11110111, B11111000, B11111111, B10000001, B11111111, B11000000,
  B11100000, B11100000, B00000110, B00000111, B11111000, B00000000, B00111111, B11011111, B11110000, B11110000, B11110111, B11111001, B11111111, B11000011, B11111111, B11000000,
  B11100000, B11100000, B00000110, B00000011, B11110000, B00000000, B00111101, B11111110, B11110000, B11110000, B11110111, B11111001, B11100001, B11100111, B11101111, B11000000,
  B11100000, B11100000, B00000110, B00000011, B11110000, B00000000, B01111101, B11111110, B11110000, B11110000, B11110001, B11100001, B11100001, B11100111, B11000111, B11000000,
  B11100000, B11100000, B00000110, B00000111, B11111000, B00000000, B01111101, B11111100, B11110000, B11110000, B11110001, B11100011, B11111111, B11100111, B10000011, B11000000,
  B11100000, B11100000, B00000110, B00001111, B00111100, B00000000, B01111100, B11111100, B11111000, B11110000, B11110001, B11100011, B11111111, B11100111, B10000011, B11000000,
  B11100000, B11100000, B00000110, B00011110, B00011110, B00000000, B01111000, B11111100, B11111000, B11110000, B11110001, B11100011, B11100000, B00000111, B10000011, B11000000,
  B11100000, B11100000, B00000110, B00111100, B00001111, B00000000, B01111000, B11111000, B11111000, B11110001, B11110001, B11100001, B11100001, B11100111, B11100111, B11000000,
  B11111111, B11100000, B00000110, B00011000, B00000110, B00000000, B01111000, B01111000, B11111000, B11111111, B11110001, B11100001, B11111111, B11100011, B11111111, B11000000,
  B01111111, B11111000, B00000110, B00000000, B00000000, B00000000, B11111000, B01110000, B01111000, B11111111, B11100001, B11100000, B11111111, B11000011, B11111111, B11000000,
  B00111111, B11111100, B00000110, B00000000, B00000000, B00000000, B11111000, B00110000, B01111000, B01111111, B11000001, B11100000, B01111111, B10000001, B11111111, B11000000,
  B00000000, B00011111, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00001111, B10000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000011, B11100110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000001, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B01111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
};

static const unsigned char PROGMEM bitmap_audiovolumeup[] =
{
  B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B01111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000001, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000011, B11100110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00001111, B10000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00011111, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00111111, B11111100, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01111111, B11111000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B11100000, B00000110, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01111111, B11111000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00111111, B11111100, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00011111, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00001111, B10000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000011, B11100110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000001, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B01111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
};

static const unsigned char PROGMEM bitmap_audiovolumedown[] =
{
  B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B01111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000001, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000011, B11100110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00001111, B10000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00011111, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00111111, B11111100, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01111111, B11111000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00111111, B11111111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11100000, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11111111, B11100000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01111111, B11111000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00111111, B11111100, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00011111, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00001111, B10000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000011, B11100110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000001, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B01111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000010, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
};

static const unsigned char PROGMEM bitmap_micmute[] =
{
  B00000000, B00000000, B00111100, B00011000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000000, B11111111, B00011000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000001, B11000011, B10110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000001, B10000001, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000011, B00000000, B01100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000011, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000011, B00000000, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000011, B00000001, B10000000, B00000000, B00000000, B00011111, B00000011, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000011, B00000011, B10000000, B00000000, B00000000, B00011111, B00000111, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000011, B00000011, B00000000, B00000000, B00000000, B00011111, B10000111, B11100000, B00000000, B00000001, B11100000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000011, B00000110, B11000000, B00000000, B00000000, B00111111, B10000111, B11100000, B00000000, B00000001, B11100000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00000011, B00000110, B11000000, B00000000, B00000000, B00111111, B10001111, B11100000, B00000000, B00000001, B11100000, B00000000, B00000000, B00000011, B11000000,
  B00000000, B00011011, B00001100, B11011000, B00000000, B00000000, B00111111, B11001111, B11100000, B11110000, B11110111, B11111000, B00111111, B00000000, B11111011, B11000000,
  B00000000, B00011011, B00011100, B11011000, B00000000, B00000000, B00111111, B11001111, B11110000, B11110000, B11110111, B11111000, B11111111, B10000001, B11111111, B11000000,
  B00000000, B00011011, B00011000, B11011000, B00000000, B00000000, B00111111, B11011111, B11110000, B11110000, B11110111, B11111001, B11111111, B11000011, B11111111, B11000000,
  B00000000, B00011011, B00111000, B11011000, B00000000, B00000000, B00111101, B11111110, B11110000, B11110000, B11110111, B11111001, B11100001, B11100111, B11101111, B11000000,
  B00000000, B00011011, B00110000, B11011000, B00000000, B00000000, B01111101, B11111110, B11110000, B11110000, B11110001, B11100001, B11100001, B11100111, B11000111, B11000000,
  B00000000, B00011011, B01100000, B11011000, B00000000, B00000000, B01111101, B11111100, B11110000, B11110000, B11110001, B11100011, B11111111, B11100111, B10000011, B11000000,
  B00000000, B00011011, B11100000, B11011000, B00000000, B00000000, B01111100, B11111100, B11111000, B11110000, B11110001, B11100011, B11111111, B11100111, B10000011, B11000000,
  B00000000, B00011000, B11000001, B10011000, B00000000, B00000000, B01111000, B11111100, B11111000, B11110000, B11110001, B11100011, B11100000, B00000111, B10000011, B11000000,
  B00000000, B00001101, B11000011, B10110000, B00000000, B00000000, B01111000, B11111000, B11111000, B11110001, B11110001, B11100001, B11100001, B11100111, B11100111, B11000000,
  B00000000, B00001101, B10111100, B01110000, B00000000, B00000000, B01111000, B01111000, B11111000, B11111111, B11110001, B11100001, B11111111, B11100011, B11111111, B11000000,
  B00000000, B00000011, B00111100, B11100000, B00000000, B00000000, B11111000, B01110000, B01111000, B11111111, B11100001, B11100000, B11111111, B11000011, B11111111, B11000000,
  B00000000, B00000111, B00000001, B11000000, B00000000, B00000000, B11111000, B00110000, B01111000, B01111111, B11000001, B11100000, B01111111, B10000001, B11111111, B11000000,
  B00000000, B00000110, B11111111, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00001110, B01111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00001100, B00011000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00011000, B00011000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00011000, B00011000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00011000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B01111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B01111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
};

static const unsigned char PROGMEM bitmap_playpause[] =
{
  B00000000, B00001111, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B01111111, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000001, B11110000, B00001111, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000011, B10000000, B00000001, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000111, B00000000, B00000000, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00001100, B00000000, B00000000, B00110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00011000, B00000000, B00000000, B00011000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00111000, B00000000, B00000000, B00011100, B00000000, B00000000, B11111111, B11111000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00110000, B00000000, B00000010, B00001100, B00000000, B00000000, B11111111, B11111000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01100000, B11100000, B00000110, B00000110, B00000000, B00000000, B11110000, B00011110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01100000, B11111000, B00000110, B00000110, B00000000, B00000000, B11110000, B00011110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B01000000, B11011100, B00000110, B00000110, B00000000, B00000000, B11110000, B00011110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B11000000, B11000111, B00000110, B00000011, B00000000, B00000000, B11110000, B00011110, B00111111, B11111110, B11111000, B00011110, B00011111, B11111100, B00011111, B11111100,
  B11000000, B11000011, B10000110, B00000011, B00000000, B00000000, B11110000, B00011110, B00111111, B11111110, B11111000, B00011110, B00011111, B11111100, B00011111, B11111100,
  B11000000, B11000000, B11100110, B00000011, B00000000, B00000000, B11110000, B00011110, B11111000, B00011110, B11111000, B00011110, B01111110, B00000000, B01111000, B00001111,
  B11000000, B11000000, B01110110, B00000011, B00000000, B00000000, B11110000, B00011110, B11111000, B00011110, B11111000, B00011110, B01111110, B00000000, B01111000, B00001111,
  B11000000, B11000000, B01110110, B00000011, B00000000, B00000000, B11110000, B00011110, B11111000, B00011110, B11111000, B00011110, B01111110, B00000000, B01111000, B00001111,
  B11000000, B11000000, B11100110, B00000011, B00000000, B00000000, B11110000, B00011110, B11111000, B00011110, B11111000, B00011110, B01111110, B00000000, B01111000, B00001111,
  B11000000, B11000011, B10000110, B00000011, B00000000, B00000000, B11111111, B11111000, B11111000, B00011110, B11111000, B00011110, B00011111, B11111100, B01111111, B11111111,
  B11000000, B11000011, B10000110, B00000011, B00000000, B00000000, B11111111, B11111000, B11111000, B00011110, B11111000, B00011110, B00011111, B11111100, B01111111, B11111111,
  B11000000, B11000111, B00000110, B00000011, B00000000, B00000000, B11110000, B00000000, B11111000, B00011110, B11111000, B00011110, B00000000, B01111111, B01111000, B00000000,
  B01000000, B11011100, B00000110, B00000110, B00000000, B00000000, B11110000, B00000000, B11111000, B00011110, B11111000, B00011110, B00000000, B01111111, B01111000, B00000000,
  B01100000, B11111000, B00000110, B00000110, B00000000, B00000000, B11110000, B00000000, B11111000, B00011110, B11111000, B00011110, B00000000, B01111111, B01111000, B00000000,
  B01100000, B11100000, B00000110, B00000110, B00000000, B00000000, B11110000, B00000000, B00111111, B11111000, B00011111, B11111110, B01111111, B11111100, B00011111, B11111100,
  B00110000, B00000000, B00000010, B00001100, B00000000, B00000000, B11110000, B00000000, B00111111, B11111000, B00011111, B11111110, B01111111, B11111100, B00011111, B11111100,
  B00111000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00011000, B00000000, B00000000, B00011000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00001100, B00000000, B00000000, B00110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000111, B00000000, B00000000, B11100000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000011, B10000000, B00000001, B11000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000001, B11110000, B00001111, B10000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B01111111, B11111110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00001111, B11110000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000
};

static const unsigned char PROGMEM bitmap_screenshot[] =
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0x38, 0xE7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0x38, 0xE7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0x38, 0xE7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x07, 0xFF, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0xFC, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0x00, 0x70, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0x01, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0x8F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE7, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0x8F, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x01, 0xFC, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0xF8, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM bitmap_spectacle[] =
{
0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7C, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xC0, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0x00, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x06, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x1C, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x30, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00,
0x20, 0x0F, 0xF0, 0x0C, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00,
0x60, 0xF8, 0x3F, 0x06, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00,
0x41, 0xF0, 0x0F, 0x86, 0x0E, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x0F, 0x00, 0x00,
0xC3, 0x03, 0xC0, 0x82, 0x0E, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x0F, 0x00, 0x00,
0xC3, 0x07, 0xE6, 0x83, 0x0F, 0x81, 0xFF, 0x87, 0xE0, 0xFD, 0xFC, 0xFE, 0x0F, 0xCF, 0x1F, 0x80,
0xC3, 0x0C, 0x30, 0x83, 0x0F, 0xF0, 0xFF, 0xCF, 0xF3, 0xFC, 0xF0, 0xCF, 0x3F, 0xCF, 0x3F, 0xC0,
0x83, 0x18, 0x10, 0x83, 0x07, 0xF8, 0xF3, 0xCE, 0x73, 0xC4, 0x70, 0x8F, 0x3C, 0x4F, 0x39, 0xC0,
0x83, 0x18, 0x18, 0x83, 0x03, 0xFC, 0xF1, 0xDE, 0x73, 0x84, 0x70, 0x0F, 0x38, 0x4F, 0x79, 0xC0,
0x83, 0x18, 0x18, 0x83, 0x00, 0x7E, 0xF1, 0xDF, 0xF3, 0x80, 0x71, 0xFF, 0x78, 0x0F, 0x7F, 0xC0,
0x83, 0x18, 0x10, 0x83, 0x08, 0x1E, 0xF1, 0xDE, 0x03, 0x80, 0x71, 0xEF, 0x78, 0x0F, 0x78, 0x00,
0xC3, 0x0C, 0x30, 0x83, 0x0C, 0x1E, 0xF1, 0xDE, 0x03, 0x80, 0x71, 0xCF, 0x38, 0x0F, 0x78, 0x00,
0xC3, 0x07, 0xE0, 0x83, 0x0C, 0x1C, 0xF3, 0xCF, 0x03, 0xC0, 0x71, 0xCF, 0x3C, 0x0F, 0x3C, 0x00,
0xC1, 0x01, 0x80, 0x82, 0x0F, 0x7C, 0xFF, 0xCF, 0xF3, 0xFE, 0x7D, 0xFF, 0x3F, 0xEF, 0x3F, 0xC0,
0x41, 0xFF, 0xFF, 0x86, 0x0F, 0xF8, 0xFF, 0x87, 0xF1, 0xFC, 0x7C, 0xFF, 0x9F, 0xDF, 0x9F, 0xC0,
0x60, 0xFF, 0xFE, 0x04, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x30, 0x00, 0x00, 0x0C, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x30, 0x00, 0x00, 0x0C, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x0C, 0x00, 0x00, 0x30, 0x00, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x06, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0x80, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xE0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM bitmap_forward[] =
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xB8, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x9C, 0x06, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8E, 0x06, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x87, 0x86, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x83, 0xC6, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x81, 0xE6, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x7E, 0x00, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x3E, 0x00, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x1E, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x06, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x02, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x06, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x06, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x3E, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x3E, 0x00, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0xF6, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x83, 0xC6, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x87, 0x86, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x8F, 0x06, 0x3A, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xBE, 0x06, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x07, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x80, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM bitmap_back[] =
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE0, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x60, 0x7D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5C, 0x60, 0xF1, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x61, 0xE1, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x63, 0xC1, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x6F, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00, 0x7C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x7C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x60, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x60, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x40, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0x00, 0x40, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x00, 0x60, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x78, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x7C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x7E, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x67, 0x81, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x63, 0xC1, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x61, 0xE1, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x60, 0x71, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x60, 0x39, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x1D, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x0F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM bitmap_lock[] =
{
0x00, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xF3, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0xC0, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0x80, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x03, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00,
0x07, 0x00, 0x1C, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF0, 0x00, 0x00, 0x00,
0x07, 0x00, 0x1C, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00,
0x07, 0x00, 0x1C, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00,
0x07, 0x00, 0x1C, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00,
0x07, 0x00, 0x1C, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00,
0x07, 0x00, 0x1C, 0x00, 0x00, 0x07, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x00, 0x00, 0x00,
0x7F, 0xFF, 0xFF, 0xC0, 0x00, 0x07, 0xE0, 0x00, 0x1F, 0xE0, 0x1F, 0xF9, 0xF1, 0xFC, 0x00, 0x00,
0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x7F, 0xF8, 0x3F, 0xF9, 0xF0, 0xFC, 0x00, 0x00,
0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0x7C, 0xF8, 0x7E, 0x79, 0xF0, 0xF0, 0x00, 0x00,
0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0xFC, 0xFC, 0xFC, 0x39, 0xF1, 0xE0, 0x00, 0x00,
0xFF, 0xF1, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0xF8, 0x7C, 0xFC, 0x39, 0xF3, 0xC0, 0x00, 0x00,
0xFF, 0xE0, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0xF8, 0x7C, 0xF8, 0x01, 0xF7, 0x80, 0x00, 0x00,
0xFF, 0xE0, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0xF8, 0x7C, 0xF8, 0x01, 0xFF, 0xC0, 0x00, 0x00,
0xFF, 0xE0, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x00, 0xF8, 0x7C, 0xF8, 0x01, 0xFF, 0xE0, 0x00, 0x00,
0xFF, 0xE1, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x0C, 0xF8, 0x7C, 0xF8, 0x01, 0xFF, 0xE0, 0x00, 0x00,
0xFF, 0xF1, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x0C, 0xF8, 0x7C, 0xF8, 0x01, 0xFB, 0xF0, 0x00, 0x00,
0xFF, 0xF1, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x1C, 0xF8, 0xFC, 0xFC, 0x01, 0xF3, 0xF0, 0x00, 0x00,
0xFF, 0xE0, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x1C, 0xFC, 0xFC, 0xFC, 0x01, 0xF1, 0xF8, 0x00, 0x00,
0xFF, 0xE0, 0xFF, 0xE0, 0x00, 0x07, 0xE0, 0x1C, 0x7C, 0xF8, 0x7F, 0x39, 0xF1, 0xFC, 0x00, 0x00,
0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x3F, 0xFF, 0xFC, 0x7F, 0xF8, 0x7F, 0xFF, 0xFD, 0xFE, 0x00, 0x00,
0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x3F, 0xFF, 0xFC, 0x1F, 0xE0, 0x1F, 0xFF, 0xFD, 0xFE, 0x00, 0x00,
0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x7F, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xBF, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM bitmap_layout[] =
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3F, 0x87, 0xF1, 0xFC, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3F, 0xCF, 0xF3, 0xFC, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3F, 0xCF, 0xF3, 0xFC, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3F, 0xCF, 0xF3, 0xFC, 0xFF, 0x8F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3F, 0xCF, 0xF3, 0xFC, 0xFF, 0x83, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x3F, 0xCF, 0xF3, 0xFC, 0xFF, 0x83, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00,
0x1F, 0x87, 0xE1, 0xFC, 0x7F, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x01, 0xFE, 0x3F, 0x1E, 0x3F, 0x8F, 0x8F, 0xBF, 0xC0,
0x0F, 0xE7, 0xF3, 0xF8, 0xFE, 0x03, 0xE0, 0x01, 0xCF, 0x1E, 0x0C, 0x7B, 0xC7, 0x87, 0x8F, 0x00,
0x1F, 0xEF, 0xFB, 0xFD, 0xFF, 0x03, 0xE0, 0x01, 0x8F, 0x0F, 0x08, 0x71, 0xC7, 0x87, 0x8F, 0x00,
0x1F, 0xEF, 0xFB, 0xFD, 0xFF, 0x03, 0xE0, 0x00, 0x07, 0x8F, 0x18, 0xF1, 0xE7, 0x87, 0x8F, 0x00,
0x1F, 0xEF, 0xFB, 0xFD, 0xFF, 0x03, 0xE0, 0x00, 0x07, 0x8F, 0x98, 0xF1, 0xE7, 0x87, 0x8F, 0x00,
0x1F, 0xEF, 0xFB, 0xFD, 0xFF, 0x03, 0xE0, 0x01, 0xFF, 0x87, 0xB0, 0xF1, 0xE7, 0x87, 0x8F, 0x00,
0x1F, 0xEF, 0xFB, 0xFD, 0xFE, 0x03, 0xE0, 0x03, 0xEF, 0x87, 0xB0, 0xF1, 0xE7, 0x87, 0x8F, 0x00,
0x0F, 0xC7, 0xF1, 0xF8, 0xFE, 0x03, 0xE0, 0x13, 0xC7, 0x83, 0xE0, 0xF1, 0xE7, 0x87, 0x8F, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x33, 0xC7, 0x83, 0xE0, 0xF1, 0xE7, 0x87, 0x8F, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x33, 0xC7, 0x81, 0xE0, 0x71, 0xC3, 0xC7, 0x8F, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xE1, 0xF3, 0xFF, 0x81, 0xC0, 0x7B, 0xC3, 0xFF, 0x8F, 0xE0,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xF1, 0xF7, 0xC1, 0xC0, 0x3F, 0x81, 0xF7, 0xC7, 0xC0,
0x07, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x07, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM bitmap_konsole[] =
{
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xCE, 0x73, 0x9C, 0xE7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x9C, 0xE7, 0x39, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x39, 0xCE, 0x73, 0x9D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x80, 0x00, 0x00, 0x02, 0x0F, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0x00, 0x00, 0x01, 0x0C, 0xF7, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xC1, 0x80, 0x00, 0x01, 0x0C, 0x07, 0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x03, 0x0C, 0x07, 0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0xC0, 0x60, 0x00, 0x03, 0x0C, 0x07, 0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x80, 0x40, 0x00, 0x02, 0x08, 0x07, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x80, 0x00, 0x01, 0x00, 0x07, 0x80, 0x0F, 0x87, 0xE1, 0xDF, 0x1A, 0x0F, 0x00, 0x00, 0x00,
0xC1, 0x00, 0x00, 0x01, 0x00, 0x07, 0x80, 0x3D, 0xC1, 0xE7, 0xC7, 0x7F, 0xFF, 0x80, 0x00, 0x00,
0xC2, 0x00, 0x00, 0x03, 0x00, 0x07, 0x80, 0x73, 0xE1, 0xEF, 0xC7, 0x07, 0xEB, 0xC0, 0x00, 0x00,
0xC0, 0x03, 0x80, 0x03, 0x00, 0x07, 0x80, 0xE1, 0xE1, 0xFF, 0xC7, 0x03, 0xC3, 0xC0, 0x00, 0x00,
0x80, 0x00, 0x00, 0x02, 0x00, 0x07, 0x80, 0xF1, 0xE1, 0xF0, 0x47, 0x03, 0x81, 0xC0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x80, 0xF1, 0xF1, 0xE0, 0x07, 0x03, 0x81, 0xC0, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x01, 0x00, 0x07, 0x80, 0xFF, 0xF1, 0xE0, 0x07, 0x03, 0x81, 0xC0, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x03, 0x00, 0x07, 0x80, 0xEF, 0xE1, 0xE0, 0x07, 0x03, 0x81, 0xC0, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x03, 0x00, 0x07, 0x80, 0xF0, 0x01, 0xE0, 0x07, 0x03, 0x81, 0xC0, 0x00, 0x00,
0x80, 0x00, 0x00, 0x02, 0x00, 0x07, 0x80, 0xF0, 0x01, 0xE0, 0x07, 0x03, 0x81, 0xC0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x00, 0x07, 0x80, 0xE0, 0x01, 0xE0, 0x07, 0x03, 0x81, 0xC0, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x01, 0x00, 0x07, 0x80, 0xF8, 0x01, 0xE0, 0x07, 0x03, 0x81, 0xC0, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x03, 0x00, 0x07, 0x80, 0x7C, 0x01, 0xE0, 0x07, 0x03, 0x81, 0xC0, 0x00, 0x00,
0xC0, 0x00, 0x00, 0x03, 0x00, 0x07, 0x80, 0x3F, 0xE1, 0xE0, 0x07, 0x03, 0xC1, 0xC0, 0x00, 0x00,
0x80, 0x00, 0x00, 0x02, 0x00, 0x7F, 0xF0, 0x07, 0x07, 0xF8, 0x1F, 0xCF, 0xE7, 0xF0, 0x00, 0x00,
0x39, 0xCE, 0x73, 0x9D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x73, 0x9C, 0xE7, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM bitmap_boot[] =
{
  B00000000, B00000000, B00000000, B00000011, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00001111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00001111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111000, B11100011, B10001110, B00111001, B11100111, B10000011, B10001110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111111, B00011111, B11111111, B11111111, B11111111, B10000011, B11111110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111111, B00011111, B11111111, B11111111, B11111111, B10000011, B11111110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111111, B00011111, B11111111, B11111111, B11111111, B10000011, B11111110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00111111, B00011111, B11111111, B11111111, B11111111, B10000011, B11111110, B00111000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00011110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B11110000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00001111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00001111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11100000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000011, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B10000000, B00000000, B00000000, B00000000,
};

static const unsigned char PROGMEM bitmap_empty[] =
{
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
  B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000,
};

unsigned long lastPollTime = 0;
unsigned long pollDuration = 5;

KeyboardKeycode keyPressed=KEY_RESERVED;
ConsumerKeycode consumerKeyPressed=0;
uint8_t *bitmapName="";
#define OLED_WIDTH 128
int bitmapOffset=0;

void(* resetFunc) (void) = 0;//declare reset function at address 0

void displayBitmap(const uint8_t *bitmap,int width,int height) {
  display.clearDisplay();
  
  display.drawBitmap((display.width()  - width ) / 2,(display.height() - height) / 2,bitmap, width, height, 1);
  display.display();
}

void displayBitmapFull(const uint8_t *bitmap,int xOffset) {
  display.clearDisplay();
  
  display.drawBitmap(xOffset,0,bitmap, 128, 32, 1);
  display.display();
}

void displayWrite(char *s) {
  display.clearDisplay();
  display.setCursor(0,0);
  display.setTextSize(2);
  display.setTextColor(SSD1306_WHITE);
  display.print(s);
  display.display();
}

void setup() {
  pinMode(LED_BUILTIN, OUTPUT);

  Serial.begin(115200);
  Keyboard.begin();
  
  // SSD1306_SWITCHCAPVCC = generate display voltage from 3.3V internally
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3C for 128x32
    Serial.println(F("SSD1306 allocation failed"));
    resetFunc();
  }

  bitmapName=bitmap_boot;
  displayBitmapFull(bitmap_boot,0);
  bitmapOffset=1;
  delay(2000);
}


void loop() {
  char customKey = customKeypad.getKey();
  
  if (customKey){
    Serial.println(customKey);

    switch(customKey) {
      case '0':
        // Toggle microphone mute
        keyPressed=KEY_F20;
        bitmapName=bitmap_micmute;
        break;
      case '1':
        // Toggle speaker mute
        keyPressed=KEY_VOLUME_MUTE;
        bitmapName=bitmap_audiomute;
        break;
      case '2':
        // Toggle media play
        consumerKeyPressed=MEDIA_PLAY_PAUSE;
        bitmapName=bitmap_playpause;
        break;
      case '3':
        // Previous media
        consumerKeyPressed=MEDIA_PREVIOUS;
        bitmapName=bitmap_back;
        break;
      case '4':
        // Next media
        consumerKeyPressed=MEDIA_NEXT;
        bitmapName=bitmap_forward;
        break;
      case '5':
        // Volume down
        keyPressed=KEY_VOLUME_DOWN;
        bitmapName=bitmap_audiovolumedown;
        break;
      case '6':
        // Volume up
        keyPressed=KEY_VOLUME_UP;
        bitmapName=bitmap_audiovolumeup;
        break;
      case '7':
        // Full screen screenshot
        keyPressed=KEY_F15;
        bitmapName=bitmap_screenshot;
        break;
      case '8':
        // Active window screenshot
        keyPressed=KEY_F16;
        bitmapName=bitmap_screenshot;
        break;
      case '9':
        // Launch spectacle
        keyPressed=KEY_F17;
        bitmapName=bitmap_spectacle;
        break;
      case 'A':
        // Keyboard layour switcher
        keyPressed=KEY_F18;
        bitmapName=bitmap_layout;
        break;
      case 'B':
        // Custom key
        keyPressed=KEY_F19;
        bitmapName=bitmap_boot;
        break;
      case 'C':
        // Custom key
        keyPressed=KEY_F21;
        bitmapName=bitmap_boot;
        break;
      case 'D':
        // Run konsole
        keyPressed=KEY_F22;
        bitmapName=bitmap_konsole;
        break;
      case 'E':
        // Screen lock
        keyPressed=KEY_F23;
        bitmapName=bitmap_lock;
        break;
      }
  }

  if(keyPressed!=KEY_RESERVED || consumerKeyPressed!=0) {
    displayBitmapFull(bitmapName,0);
    bitmapOffset=1;

    if(keyPressed!=KEY_RESERVED) {
      Keyboard.write(keyPressed);
    } else if (consumerKeyPressed!=0) {
      Keyboard.write(consumerKeyPressed);
    }

    //digitalWrite(LED_BUILTIN, HIGH);
    delay(100); // Simple debounce
    //digitalWrite(LED_BUILTIN, LOW);
    
    keyPressed=KEY_RESERVED;
    consumerKeyPressed=0;
  }

  if ((millis() - lastPollTime) > pollDuration) {
    lastPollTime=millis();

    if(bitmapOffset==OLED_WIDTH) {
      display.clearDisplay();
      display.display();
      bitmapOffset=0;
    } else if(bitmapOffset>0) {
      display.clearDisplay();
      displayBitmapFull(bitmapName,bitmapOffset);
      bitmapOffset+=2;
      display.display();
    }
  }
}
